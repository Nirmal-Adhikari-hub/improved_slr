Use Bidirectional Add Fusion
[32m2025-08-22 21:55:51,998 | INFO | Model built. kernel_spec from model: ['K5', 'P2', 'K5', 'P2'][0m
Applying training transformations
[PhoenixFeeder] train: 5671 samples | interval=1 | scale=1.0 | input=224
Applying test transformations
[PhoenixFeeder] dev: 540 samples | interval=1 | scale=1.0 | input=224
Applying test transformations
[PhoenixFeeder] test: 629 samples | interval=1 | scale=1.0 | input=224
[32m2025-08-22 21:55:52,151 | INFO | No checkpoint found. Starting from scratch.[0m
Traceback (most recent call last):
  File "scripts/train.py", line 207, in <module>
    main()
  File "scripts/train.py", line 101, in main
    tr = train_one_epoch(
  File "/home/nirmal/SlowFast/improved_slr/cslr/engine/trainers.py", line 42, in train_one_epoch
    out = model(vids, vid_lens, label=labels, label_lgt=lab_lens)
  File "/home/nirmal/miniconda3/envs/signL/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/nirmal/SlowFast/improved_slr/cslr/models/slowfast/legacy_slowfast_adapter.py", line 80, in forward
    ret = self.inner(x, len_x, label, label_lgt=label_lgt)
  File "/home/nirmal/miniconda3/envs/signL/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/nirmal/SlowFast/improved_slr/cslr/models/slowfast/slr_network_multi.py", line 88, in forward
    framewise = self.conv2d(x.permute(0,2,1,3,4))
  File "/home/nirmal/miniconda3/envs/signL/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/nirmal/SlowFast/improved_slr/cslr/models/slowfast/slowfast_modules/slowfast.py", line 286, in forward
    x = self.s2_fuse(x)
  File "/home/nirmal/miniconda3/envs/signL/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/nirmal/SlowFast/improved_slr/cslr/models/slowfast/slowfast_modules/fuse_helper.py", line 230, in forward
    x_s_fuse = x_s + self.weight_s * fuse1
RuntimeError: CUDA out of memory. Tried to allocate 490.00 MiB (GPU 0; 79.15 GiB total capacity; 7.18 GiB already allocated; 109.69 MiB free; 7.29 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF
